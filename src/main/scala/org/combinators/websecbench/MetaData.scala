/*
 * Websecbench is a suite of web security benchmarks generated by (CL)S.
 * Copyright (C) 2021  Jan Bessai and Malte Mues
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

package org.combinators.websecbench

trait MetaData {
  def toReportElement(testNumber: String): String

  def getTaintSources: Seq[TaintSource]
  def makeSafe: MetaData
}

case class PathTraversalVulnerability(isVulnerable: Boolean) extends MetaData {
  def toReportElement(testNumber: String): String = {
    s"""
       |<test-metadata>
       |  <benchmark-version>1.2</benchmark-version>
       |  <category>pathtraver</category>
       |  <test-number>${testNumber}</test-number>
       |  <vulnerability>${isVulnerable}</vulnerability>
       |  <cwe>22</cwe>
       |</test-metadata>
       |""".stripMargin
  }

  override def getTaintSources = Seq(UncheckedString())

  override def makeSafe: MetaData = PathTraversalVulnerability(false)
}

case class SQLInjectionVulnerability(isVulnerable: Boolean) extends MetaData {
  def toReportElement(testNumber: String): String = {
    s"""
       |<test-metadata>
       |  <benchmark-version>1.2</benchmark-version>
       |  <category>SQLInjection</category>
       |  <test-number>${testNumber}</test-number>
       |  <vulnerability>${isVulnerable}</vulnerability>
       |  <cwe>78</cwe>
       |</test-metadata>
       |""".stripMargin
  }

  override def getTaintSources = Seq(UncheckedString())

  override def makeSafe: MetaData = SQLInjectionVulnerability(false)
}

trait TaintSource

case class UncheckedString() extends TaintSource
case class StaticString() extends TaintSource
